<?php
declare(strict_types=1);
namespace Jsys\strings\Test;

use jsys\types\strings\Text;
use PHPUnit\Framework\TestCase;

class TextTest extends TestCase
{
    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
    }

    public function test_must_accept_the_empty_string()
    {
        $testString = '';
        $text = new Text($testString);
        $actual = $text->isEmpty();
        $this->assertTrue($actual);
    }

    public function test_must_not_accept_non_empty_string()
    {
        $testString = 'some string';
        $text = new Text($testString);
        $actual = $text->isEmpty();
        $this->assertFalse($actual);
    }

    public function test_must_accept_the_string_which_has_one_or_more_spaces()
    {
        $testString = 'some string';
        $text = new Text($testString);
        $actual = $text->hasSpace();
        $this->assertTrue($actual);
    }

    public function test_must_not_accept_the_string_which_has_no_spaces()
    {
        $testString = 'somestring';
        $text = new Text($testString);
        $actual = $text->hasSpace();
        $this->assertFalse($actual);
    }

    public function test_must_accept_the_string_with_spaces()
    {
        $testString = '    ';
        $text = new Text($testString);
        $actual = $text->isSpace();
        $this->assertTrue($actual);
    }

    public function test_must_not_accept_the_string_without_spaces()
    {
        $testString = 'some string';
        $text = new Text($testString);
        $actual = $text->isSpace();
        $this->assertFalse($actual);
    }

    public function test_must_return_length_of_string()
    {
        $testString = 'some string';
        $text = new Text($testString);
        $actual = $text->length();
        $this->assertIsNumeric($actual);
    }

    public function test_must_return_string_value()
    {
        $testString = 'some string';
        $text = new Text($testString);
        $actual = $text->value();
        $this->assertEquals($actual, $testString);
    }


    public function tearDown(): void
    {

    }
}
?>